---

- name: main
  hosts: localhost
  connection: local


  #! pre_tasks
  pre_tasks:

    - name: Include configuration
      include_vars:
        file: config.yaml

    - name: apt update
      apt:
        update_cache: yes
        upgrade: yes
        state: latest
        cache_valid_time: 86400   # 1 day
      become: yes

    - name: apt autoclean autoremove
      apt:
        autoclean: yes
        autoremove: yes
      become: yes


  #! tasks
  tasks:

    - name: Check if swap enabled
        shell: swapon -s | wc -l
        register: swap_enabled

    - name: Disable swap
        shell: dphys-swapfile swapoff
        when: swap_enabled.stdout != "1"

    - name: Change the size of the swap and reboot the system
        replace:
          path: /etc/dphys-swapfile
          regexp: CONF_SWAPSIZE=\d+
          replace: CONF_SWAPSIZE=2048  #todo size of swap memory -> swap_vars.size
        notify: reboot
      when:
        - install.swap == true

    - name: Setup the swap, turn it on 
      shell: "{{ item }}"
      with_items:
        - dphys-swapfile setup
        - dphys-swapfile swapon

    - name: Basic dependencies
      apt:
        name:
          - software-properties-common
          - lsb-release
          - apt-transport-https
          - ca-certificates
          - git
          - htop
          - openssh-server
          - openssh-client
          - openssl
          - xterm
          - tmux
        state: present
      become: true

    - name: File management dependencies
      apt:
        name:
          - curl
          - file
          - pkg-config
          - wget
          - zip
          - unzip
        state: present
      become: true

    - name: Network and security dependencies
      apt:
        name:
          - gnupg
          - gnupg2
          - gnupg-agent
          - libssl-dev
          - nmap
          - net-tools
        state: present
      become: true

    - name: Shell utils
      apt:
        name:
          - psutil
          - shellcheck # sh/bash script static analyzer
        state: present
      become: true

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker APT repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install Docker
      apt:
        name: 
          - docker-ce
          - docker-compose
        state: present

    # - name: Create docker group
    #   shell:
    #     cmd: groupadd docker
    #   become: true
    #   ignore_errors: yes

    # - name: Add your user to the docker group
    #   shell:
    #     cmd: usermod -aG docker {{ ansible_user_id }}
    #   become: true
    #   ignore_errors: yes

    # - name: Get permission
    #   shell:
    #     cmd: sudo chmod 666 /var/run/docker.sock

    - name: C++ dependencies
      apt:
        name:
          - build-essential # C++ compilers including gcc, g++, make
          - cmake
          - ccache
          - clang # compiler
          - clang-tidy # linter
          - clang-format # formatting
          - clang-tools # other tools
          - libgtest-dev # gtest
          - libgmock-dev # gtest
          - libboost-all-dev # boost libs
          - gdb # GNU debugger
          - valgring # debugger
          - libyaml-cpp-dev # yaml parser
        state: present
      become: true

    - name: Python dependencies
      apt:
        name:
          - python3
          - python3-dev
          - python3-pip # pkg manager
          - python3-pytest # pytest
          - python3-coverage # pycoverage
          - ipython
          - pylint # linter
          - python3-flake8 # linter
          - python3-mypy # staticlinter
        state: present
      become: true

    - name: Data analysis libraries
      apt:
        name:
          - python3-matplotlib
          - python3-pandas
          - jupyter-notebook
        state: present
      become: true

    - name: Math libraries
      apt:
        name:
          - python3-numpy
          - python3-scipy
          - python3-sympy
        state: present
      become: true


    - name: OpenCV dependencies
      apt:
        name:
          - libsm6
          - libxext6
          - libxrender-dev
          - libglib2.0-0
          - libgl1-mesa-glx
        state: present

    - name: OpenCV
      pip:
        name: opencv-python
        state: present

    - name: PyTorch
      pip:
        name: torch torchvision torchaudio
        state: present

    - name: Tesseract
      apt:
        name:
          - tesseract-ocr
          - libtesseract-dev
        state: present

    - name: Tesseract dependencies
      pip:
        name: pytesseract
        state: present

    - name: Scikit-learn dependencies
      apt:
        name:
          - libblas-dev
          - liblapack-dev
          - libatlas-base-dev
          - gfortran
        state: present

    - name: Scikit-learn
      pip:
        name: scikit-learn
        state: present



# - name: LaTeX
#   apt:
#     name:
#       - texlive-latex-extra
#       - latexmk
#     state: present
#   become: true

# - name: LaTeX dependancies
#   apt:
#     name:
#       - python3-pygments
#     state: present
#   become: true



# - name: Import the Microsoft GPG key
#   apt_key:
#     url: https://packages.microsoft.com/keys/microsoft.asc
#     state: present
#   become: true
  
  
# - name: Enable VSCode repository
#   apt_repository:
#     repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
#     state: present
#   become: true


# - name: Install VSCode
#   apt:
#     name:
#       - code
#     state: present
#   become: true



  #todo custom rules: when
  # when: 
  #   - ansible_architecture == "x86_64" # "arm64"
  #   - ansible_python.version.major == 3 # 2

  #todo vars
  # vars:
  #   ros_distro_list:
  #     - melodic
  #     - noetic
  #     - dashing
  #     - foxy

  # vars_prompt:
  #   - name: ros_distro
  #     prompt: Which ROS distro? {{ ros_distro_list }}
  #     default: None
  #     unsafe: yes
  #     private: no
