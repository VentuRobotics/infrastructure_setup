#! base-stage
ARG BASE_IMAGE
FROM $BASE_IMAGE as base-stage

ARG DEBIAN_FRONTEND=noninteractive

ARG UBUNTU_USER=docker_user
ARG UBUNTU_PSW=password
ARG UBUNTU_UID=1000
ARG UBUNTU_GID=1000

ENV UBUNTU_USER=$UBUNTU_USER
ENV UBUNTU_PSW=$UBUNTU_PSW
ENV UBUNTU_UID=$UBUNTU_UID
ENV UBUNTU_GID=$UBUNTU_GID

# Create local user docker_user
RUN useradd -r -m -d /home/$UBUNTU_USER -s /bin/bash -g root -G sudo -G dialout -u $UBUNTU_UID -p "$(openssl passwd -6 $UBUNTU_PSW)" $UBUNTU_USER

# Add local user to system groups
RUN usermod -aG sudo $UBUNTU_USER
RUN usermod -aG root $UBUNTU_USER
RUN usermod -aG dialout $UBUNTU_USER
RUN usermod -aG tty $UBUNTU_USER
RUN usermod -aG audio $UBUNTU_USER
RUN usermod -aG video $UBUNTU_USER


########################
# INSTALL DEPENDENCIES #
########################

# Update
RUN apt update && \
	apt upgrade -y

RUN apt install --quiet -y \
    sudo software-properties-common lsb-release
RUN add-apt-repository universe

# Ubuntu deps
RUN apt install --quiet -y \
    apt-transport-https ca-certificates gnupg gnupg2 gnupg-agent libssl-dev \
    git curl file wget zip unzip pkg-config openssh-client openssh-server \
    xterm tmux gdb valgrind \
    htop net-tools nmap lynx \
    libx11-dev

RUN apt install --quiet -y \
    bash-completion
RUN echo "source /usr/share/bash-completion/completions/git" >> ~/.bashrc


# Python deps
RUN apt install --quiet -y \
    python3 python3-dev python3-pip python3-future
RUN pip3 install --upgrade \
    wheel setuptools argcomplete

# AWS
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
RUN unzip awscliv2.zip
RUN ./aws/install -i /usr/local/aws-cli -b /usr/local/bin

# Docker
# RUN apt install --quiet -y \
#     docker

RUN install -m 0755 -d /etc/apt/keyrings
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
RUN chmod a+r /etc/apt/keyrings/docker.gpg

RUN echo \
        "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
        "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

RUN apt update
RUN apt install --quiet -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

RUN usermod -aG docker $UBUNTU_USER

# RUN chown -R $UBUNTU_USER:$UBUNTU_USER $HOME/.docker
# RUN chmod -R g+rwx "$HOME/.docker"
# RUN groupadd docker
# RUN usermod -aG docker ${UBUNTU_USER}
# RUN newgrp docker
# RUN apt install --quiet -y x11-xserver-utils

RUN service docker start
# RUN usermod -a -G docker ec2-user


##################
# Final Settings #
##################

# Set user
USER $UBUNTU_USER
WORKDIR /home/$UBUNTU_USER

RUN echo "source /usr/share/bash-completion/completions/git" >> ~/.bashrc

# Set entrypoint
COPY ./docker/entrypoint.sh /
ENTRYPOINT ["/entrypoint.sh"]

ENV force_color_prompt=yes
CMD ["bash"]